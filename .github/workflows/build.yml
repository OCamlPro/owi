name: build
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          # - windows-latest see #5
        ocaml-compiler:
          - "5.1"
        #include:
        #  - os: ubuntu-latest
        #    ocaml-compiler: "4.13"
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup-ocaml
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          opam-depext: true
          opam-pin: true
          allow-prerelease-opam: true
      - name: setup
        run: |
          opam pin add . -y --no-action
          opam depext -y owi
          opam install -y ./*.opam --deps-only --with-test --with-doc
          opam upgrade --fixup
      - name: build
        run: |
          export PATH="$(brew --prefix llvm@15)/bin/:$PATH" # macossucks
          opam exec -- dune build @install
      - name: test
        run: |
          export PATH="$(brew --prefix llvm@15)/bin/:$PATH" # macossucks
          opam exec -- dune runtest
      - name: doc
        run: |
          ODOC_WARN_ERROR=true opam exec -- dune build @doc 2> output.txt
          $(exit $(wc -l output.txt | cut -d " " -f1))
      - name: fmt
        run: |
          opam exec -- dune build @fmt || (echo "\n⚠️ please run \`dune fmt\` and try again" && exit 1)
